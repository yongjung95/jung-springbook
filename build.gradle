buildscript {
    ext {
        // ext는 build.gradle 에서 사용하는 전역변수 설정
        springBootVersion = '2.4.1'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin : 'java'
apply plugin : 'eclipse'
apply plugin : 'org.springframework.boot'
apply plugin : 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

// for Junit 5
test { // (2)
    useJUnitPlatform()
}


dependencies {
    //(3)
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    // lombok
    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("org.mariadb.jdbc:mariadb-java-client") // MariaDB 드라이버 등록
    implementation('com.h2database:h2')

    implementation('org.springframework.boot:spring-boot-starter-oauth2-client') // 권한 관련
    implementation('org.springframework.session:spring-session-jdbc') // 세션 저장소로 데이터베이스 사용하기 위해 추가.

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.security:spring-security-test") // 임의로 인증된 사용자를 추가하여 API 만 테스트해 볼수 있게 하기위해 , 스프링 시큐리티 테스트를 위한 여러 도구를 지원한다.


}
